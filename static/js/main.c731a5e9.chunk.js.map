{"version":3,"sources":["components/App.module.css","components/Table/Table.module.css","components/ResultWindow/ResultWindow.module.css","components/Button/Button.module.css","components/Table/Table.js","components/Button/Button.js","components/ResultWindow/ResultWindow.js","components/Game/Game.js","components/App.js","index.js"],"names":["module","exports","Table","message","scale","onCellClick","shotView","className","styles","tableWrap","table","arrayRow","arrayCell","i","push","map","key","num","classnames","cell","hit","hitView","indexOf","miss","missView","sunk","sunkView","id","onClick","generateBoard","Button","text","button","ResultWindow","shots","ships","wrap","title","document","location","reload","Game","boardSize","shipsData","shipLength","amount","useState","setHitView","setMissView","setSunkView","setMessage","shipsSunk","setShipsSunk","endGame","setEndGame","findStopPoints","shipLocation","direction","newStopPoints","forEach","point","numToChange","arr","split","join","length","collision","shipsArr","stopArr","locations","j","generateShipLocations","row","col","Math","floor","random","newShip","newShips","shipData","newLocations","isSunk","generateShips","setShips","useEffect","ship","every","e","target","some","newArr","isHit","App","startWindow","setStartWindow","onKeyDown","keyCode","infoWrap","subtitle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c731a5e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3qFBo\",\"subtitle\":\"App_subtitle__T4mfn\",\"wrap\":\"App_wrap__1f6FR\",\"infoWrap\":\"App_infoWrap__275U4\",\"text\":\"App_text__2p0qp\",\"startWindow\":\"App_startWindow__tcwsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Table_message__1_pGp\",\"tableWrap\":\"Table_tableWrap__3gxLd\",\"table\":\"Table_table__28TwD\",\"cell\":\"Table_cell__-IGHO\",\"miss\":\"Table_miss__3Ft-t\",\"hit\":\"Table_hit__2Izhg\",\"sunk\":\"Table_sunk__v56t-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ResultWindow_title__3dtRW\",\"text\":\"ResultWindow_text__NSMKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__zIcgS\"};","import React from 'react';\r\nimport styles from './Table.module.css';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Table = ({ message, scale, onCellClick, shotView  }) => {\r\n  \r\n  const generateBoard = scale => {\r\n    const arrayRow = [];\r\n    const arrayCell = [];\r\n\r\n    for (let i = 0; i<scale; ++i) {\r\n      arrayRow.push(i);\r\n      arrayCell.push(i);\r\n    }\r\n    \r\n    return arrayRow.map(i => (\r\n          <tr key={`${i}row`}>\r\n            {arrayCell.map(num => (\r\n              <td \r\n                className={classnames({\r\n                  [styles.cell]: true,\r\n                  [styles.hit]: shotView.hitView.indexOf(`${i}${num}`) !== -1,                  \r\n                  [styles.miss]: shotView.missView.indexOf(`${i}${num}`) !== -1,\r\n                  [styles.sunk]: shotView.sunkView.indexOf(`${i}${num}`) !== -1,\r\n                })}\r\n                id={`${i}${num}`}\r\n                key={`${i}${num}`}\r\n                onClick={onCellClick}\r\n              />\r\n            ))}\r\n          </tr>\r\n        )\r\n      );\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.tableWrap}>\r\n    <h2 className={styles.message}>{message}</h2>\r\n    <table className={styles.table}>        \r\n        <tbody>\r\n        {generateBoard(scale)}            \r\n        </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    scale: PropTypes.number.isRequired,\r\n    onCellClick: PropTypes.func,\r\n    shotView: PropTypes.object\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ text, onClick }) => (\r\n    <button \r\n    className={styles.button}\r\n    onClick={onClick}\r\n>\r\n    {text}\r\n</button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from './ResultWindow.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ResultWindow = ({ shots, ships }) => (\r\n  <div className={styles.wrap}>\r\n      <h2 className={styles.title}>Конец игры.<br />Результат:</h2>      \r\n      <p className={styles.text}>\r\n        Потоплено кораблей: {ships}<br />\r\n        Выстрелов сделано: {shots}\r\n      </p>\r\n      <Button \r\n        text={'Сыграть снова'}\r\n        onClick={() => document.location.reload()}\r\n      />\r\n  </div>\r\n);\r\n\r\nexport default ResultWindow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Table from '../Table/Table';\r\nimport ResultWindow from '../ResultWindow/ResultWindow';\r\n\r\nconst Game = ({ boardSize }) => {\r\n\r\n  const shipsData = [\r\n    { shipLength: 4, amount: 1 },\r\n    { shipLength: 3, amount: 2 },\r\n    { shipLength: 2, amount: 3 },\r\n    { shipLength: 1, amount: 4 },\r\n  ]\r\n\r\n  const [hitView, setHitView] = useState([]);\r\n  const [missView, setMissView] = useState([]);\r\n  const [sunkView, setSunkView] = useState([]);\r\n  const [message, setMessage] = useState('Нажми на клетку, чтобы сделать выстрел');\r\n  let [shipsSunk, setShipsSunk] = useState(0);\r\n  const [endGame, setEndGame] = useState(false);\r\n\r\n  const findStopPoints = (shipLocation, direction) => {\r\n    let newStopPoints = [...shipLocation];\r\n  \r\n    shipLocation.forEach( (point, i) => {\r\n      let numToChange = direction === 1 ? point[0] : point[1];\r\n      \r\n      if (numToChange > 0) {\r\n        const arr = point.split('');\r\n        direction === 1 ? --arr[0] : --arr[1];\r\n        newStopPoints.push(arr.join(''));\r\n      }\r\n      \r\n      if (numToChange < boardSize-1) {      \r\n        const arr = point.split('');\r\n        direction === 1 ? ++arr[0] : ++arr[1];\r\n        newStopPoints.push(arr.join(''));\r\n      }\r\n      \r\n      // работа с первой клеткой корабля\r\n      if (i === 0) {\r\n        if (direction === 1) { \r\n          const arr = point.split('');\r\n          if (point[1] > 0) {\r\n            arr[1] = point[1] - 1;\r\n            newStopPoints.push(arr.join(''));\r\n            if (point[0] > 0) {\r\n              arr[0] = point[0] - 1;\r\n              newStopPoints.push(arr.join(''));  \r\n            }              \r\n            if (point[0] < boardSize-1) {\r\n              arr[0] = +point[0] + 1;\r\n              newStopPoints.push(arr.join(''));\r\n            }      \r\n          }      \r\n          \r\n        } else {\r\n          const arr = point.split('');\r\n          if (point[0] > 0) {\r\n            --arr[0];\r\n            newStopPoints.push(arr.join(''));\r\n             if (point[1] < boardSize-1) {\r\n              ++arr[1];        \r\n              newStopPoints.push(arr.join(''));           \r\n            } \r\n            if (point[1] > 0) {\r\n              arr[1] = point[1] - 1; \r\n              newStopPoints.push(arr.join(''));\r\n             }\r\n           }\r\n        }\r\n      };\r\n\r\n      // работа с последней клеткой корабля\r\n      if (i === shipLocation.length - 1) {\r\n        if (direction === 1) { \r\n          const arr = point.split('');\r\n          if (point[1] < boardSize-1) {\r\n            arr[1] = +point[1] + 1;\r\n            newStopPoints.push(arr.join(''));\r\n            if (point[0] < boardSize-1) {\r\n              arr[0] = +point[0] + 1;\r\n              newStopPoints.push(arr.join(''));  \r\n            }              \r\n            if (point[0] > 0) {\r\n              arr[0] = point[0] - 1;\r\n              newStopPoints.push(arr.join(''));\r\n            }      \r\n          } \r\n          \r\n        } else {\r\n          const arr = point.split('');\r\n          if (arr[0] < boardSize-1) {\r\n            ++arr[0];\r\n            newStopPoints.push(arr.join(''));\r\n            \r\n             if (point[1] < boardSize-1) {\r\n              ++arr[1];        \r\n              newStopPoints.push(arr.join(''));   \r\n            } \r\n            if (point[1] > 0) {\r\n              arr[1] = point[1] - 1; \r\n              newStopPoints.push(arr.join(''));\r\n             }\r\n           }\r\n        }\r\n      }; \r\n    });\r\n    \r\n    return newStopPoints;\r\n  };\r\n     \r\n  // проверка пересечений кораблей\r\n  const collision = (shipsArr, location) => {\r\n    for (let i = 0; i < shipsArr.length; i++) {\r\n      const stopArr = findStopPoints(shipsArr[i].locations, shipsArr[i].direction);\r\n      for (let j = 0; j < location.length; j++) {\r\n          if (stopArr.indexOf(location[j]) >= 0) {\r\n              return true;\r\n          }\r\n        }\r\n      }\r\n    return false;\r\n };\r\n\r\n  const generateShipLocations = (shipLength, direction) => {\r\n    let row, col;\r\n    \r\n    // генерация начальной позиции корабля\r\n    if (direction === 1) {\r\n      row = Math.floor(Math.random() * boardSize);\r\n      col = Math.floor(Math.random() * (boardSize - shipLength));\r\n    } else {\r\n      row = Math.floor(Math.random() * (boardSize - shipLength));\r\n      col = Math.floor(Math.random() * boardSize);\r\n    }\r\n\r\n    const newShip = [];\r\n    for (let i = 0; i < shipLength; ++i) {\r\n      (direction === 1) ? newShip.push(`${row}${col + i}`) \r\n        : newShip.push(`${row + i}${col}`)\r\n    }\r\n\r\n    return newShip;\r\n  };\r\n\r\n  const generateShips = () => {\r\n    const newShips = [];\r\n    \r\n    shipsData.forEach(shipData => {\r\n      for (let i = 0; i < shipData.amount; ++i) {\r\n        const direction = Math.floor(Math.random() * 2);  // 1 - горизонтальный корабль, 0 - вертикальный\r\n        const newLocations = generateShipLocations(shipData.shipLength, direction);\r\n        if (!collision(newShips, newLocations)) {\r\n          const newShip = { \r\n            locations: newLocations,\r\n            isSunk: false,\r\n            direction: direction\r\n          };\r\n          newShips.push(newShip);\r\n        } else i--;\r\n      };\r\n    });\r\n\r\n    return newShips;\r\n  };  \r\n  \r\n  const [ships, setShips] = useState(generateShips());\r\n\r\n  const isHit = id => {\r\n    const result = ships.some(ship => {\r\n      if (ship.locations.indexOf(id) !== -1) {\r\n        const newArr = [...hitView];\r\n        newArr.push(id);\r\n\r\n        setHitView(newArr);\r\n        setMessage('Корабль подбит!');\r\n        return ship;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  const onCellClick = e => {\r\n    const id = e.target.id; \r\n        \r\n    if (hitView.indexOf(id) === -1) {      \r\n      if (!isHit(id)) {\r\n        if (missView.indexOf(id) === -1) {\r\n          const newArr = [...missView];\r\n          newArr.push(id);\r\n\r\n          setMissView(newArr);\r\n          setMessage('Мимо!');\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newShips = [...ships];\r\n\r\n    newShips.forEach( ship => {\r\n      if (!ship.isSunk) {\r\n        const isSunk = ship.locations.every( point => hitView.indexOf(point) !== -1);\r\n        if (isSunk) {\r\n          setShipsSunk(++shipsSunk);\r\n          ship.isSunk = true;\r\n          setSunkView([...sunkView, ...ship.locations]);\r\n\r\n          setMessage(`Корбаль затоплен! Потоплен ${shipsSunk}й корабль`);\r\n        }\r\n      }\r\n    });\r\n    setShips(newShips);\r\n    if (ships.every(ship => ship.isSunk)) setEndGame(true);\r\n\r\n\r\n  }, [hitView]);\r\n\r\n  return (\r\n    <>\r\n      {endGame ? \r\n        <ResultWindow \r\n          shots={hitView.length + missView.length}\r\n          ships={shipsSunk}\r\n        />\r\n      :\r\n        <Table \r\n          message={message}\r\n          scale={+boardSize}\r\n          onCellClick={onCellClick}\r\n          shotView={{\r\n            hitView: hitView,\r\n            missView: missView,\r\n            sunkView:sunkView\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState } from 'react';\nimport styles from './App.module.css';\nimport Game from './Game/Game';\nimport Button from './Button/Button';\n\nconst App = () => {\n\n  const [startWindow, setStartWindow] = useState(true);\n  const boardSize = 10;\n\n  return (\n    <main className={styles.wrap}>\n      {startWindow ? \n        <div \n          className={styles.startWindow}\n          onKeyDown={e => e.keyCode === 13 ? setStartWindow(false) : null}\n        >\n          <h1 className={styles.title}>Морской бой</h1>\n          <div className={styles.infoWrap}>\n            <p className={styles.text}>Добро пожаловать в игру!</p>\n            <p className={styles.text}>Твоя задача - потопить все корабли.</p>\n            <p>\n              <span className={styles.subtitle}>Размер доски: </span>\n              {`${boardSize}x${boardSize}`}\n            </p>            \n            <p className={styles.subtitle}>Количество кораблей: </p>\n            <p className={styles.text}>1 корабль — четырёхпалубный </p>\n            <p className={styles.text}>2 корабля — трёхпалубные</p>\n            <p className={styles.text}>3 корабля — двухпалубные</p>\n            <p className={styles.text}>4 корабля — однопалубные</p>\n          </div>\n          <Button \n            text={'Начать игру'}\n            onClick={() => setStartWindow(false)}\n          />\n        </div>\n      :\n        <Game \n          boardSize={boardSize}\n        />\n      }\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}